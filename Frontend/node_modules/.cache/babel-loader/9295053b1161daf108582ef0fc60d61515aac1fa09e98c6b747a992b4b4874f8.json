{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasksList: [],\n  selectedTask: {},\n  isLoading: false,\n  error: ''\n};\nconst BASE_URL = 'http://localhost:4000/api/tasks/';\n\n//GET\nexport const getTasksFromServer = createAsyncThunk(\"tasks/getTasksFromServer\", async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  const response = await fetch(BASE_URL);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: 'No Tasks Found'\n    });\n  }\n});\n\n//POST \nexport const addTaskToServer = createAsyncThunk(\"tasks/addTaskToServer\", async (task, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(task),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  const response = await fetch(BASE_URL, options);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: 'Task Not Added'\n    });\n  }\n});\n\n//PATCH \nexport const updateTaskInServer = createAsyncThunk(\"tasks/updateTaskInServer\", async (task, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  const options = {\n    method: 'PATCH',\n    body: JSON.stringify(task),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  const response = await fetch(BASE_URL + '/' + task._id, options);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: 'Task Not Updated'\n    });\n  }\n});\n\n//DELETE \nexport const deleteTaskFromServer = createAsyncThunk(\"tasks/deleteTaskFromServer\", async (task, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n  const options = {\n    method: 'DELETE'\n  };\n  const response = await fetch(BASE_URL + '/' + task._id, options);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: 'Task Not Deleted'\n    });\n  }\n});\nconst tasksSlice = createSlice({\n  name: 'tasksSlice',\n  initialState,\n  reducers: {\n    removeTaskFromList: (state, action) => {\n      state.tasksList = state.tasksList.filter(task => task._id !== action.payload._id);\n    },\n    setSelectedTask: (state, action) => {\n      state.selectedTask = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getTasksFromServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTasksFromServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.tasksList = action.payload;\n    }).addCase(getTasksFromServer.rejected, (state, action) => {\n      state.error = action.payload.error;\n      state.isLoading = false;\n      state.tasksList = [];\n    }).addCase(addTaskToServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(addTaskToServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.tasksList.push(action.payload);\n    }).addCase(addTaskToServer.rejected, (state, action) => {\n      state.error = action.payload.error;\n      state.isLoading = false;\n    }).addCase(updateTaskInServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateTaskInServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.tasksList = state.tasksList.map(task => task._id === action.payload._id ? action.payload : task);\n    }).addCase(updateTaskInServer.rejected, (state, action) => {\n      state.error = action.payload.error;\n      state.isLoading = false;\n    }).addCase(deleteTaskFromServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteTaskFromServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n    }).addCase(deleteTaskFromServer.rejected, (state, action) => {\n      state.error = action.payload.error;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  addTaskToList,\n  removeTaskFromList,\n  updateTaskInList,\n  setSelectedTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","tasksList","selectedTask","isLoading","error","BASE_URL","getTasksFromServer","_","rejectWithValue","response","fetch","ok","jsonResponse","json","addTaskToServer","task","options","method","body","JSON","stringify","headers","updateTaskInServer","_id","deleteTaskFromServer","tasksSlice","name","reducers","removeTaskFromList","state","action","filter","payload","setSelectedTask","extraReducers","builder","addCase","pending","fulfilled","rejected","push","map","addTaskToList","updateTaskInList","actions","reducer"],"sources":["C:/Users/SANJAI/Desktop/Fullstack/MERN-video-08/Frontend/src/slices/tasksSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    tasksList:[],\n    selectedTask:{},\n    isLoading:false,\n    error:''\n}\n\nconst BASE_URL = 'http://localhost:4000/api/tasks/'\n\n//GET\nexport const getTasksFromServer = createAsyncThunk(\n    \"tasks/getTasksFromServer\",\n    async (_,{rejectWithValue}) => {\n        const response = await fetch(BASE_URL)\n        if (response.ok) {\n            const jsonResponse = await response.json()\n            return jsonResponse\n        } else {\n            return rejectWithValue({error:'No Tasks Found'})\n        }\n    }\n)\n\n//POST \nexport const addTaskToServer = createAsyncThunk(\n    \"tasks/addTaskToServer\",\n    async (task,{rejectWithValue}) => {\n        const options = {\n            method:'POST',\n            body: JSON.stringify(task),\n            headers: {\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }\n        const response = await fetch(BASE_URL,options)\n        if (response.ok) {\n            const jsonResponse = await response.json()\n            return jsonResponse\n        } else {\n            return rejectWithValue({error:'Task Not Added'})\n        }\n    }\n)\n\n//PATCH \nexport const updateTaskInServer = createAsyncThunk(\n    \"tasks/updateTaskInServer\",\n    async (task,{rejectWithValue}) => {\n        const options = {\n            method:'PATCH',\n            body: JSON.stringify(task),\n            headers: {\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }\n        const response = await fetch(BASE_URL + '/' + task._id,options)\n        if (response.ok) {\n            const jsonResponse = await response.json()\n            return jsonResponse\n        } else {\n            return rejectWithValue({error:'Task Not Updated'})\n        }\n    }\n)\n\n//DELETE \nexport const deleteTaskFromServer = createAsyncThunk(\n    \"tasks/deleteTaskFromServer\",\n    async (task,{rejectWithValue}) => {\n        const options = {\n            method:'DELETE',\n        }\n        const response = await fetch(BASE_URL + '/' + task._id,options)\n        if (response.ok) {\n            const jsonResponse = await response.json()\n            return jsonResponse\n        } else {\n            return rejectWithValue({error:'Task Not Deleted'})\n        }\n    }\n)\n\n\n\n\nconst tasksSlice = createSlice({\n    name:'tasksSlice',\n    initialState,\n    reducers: {\n        \n        removeTaskFromList:(state,action) => {\n            state.tasksList = state.tasksList.filter((task) => task._id !== action.payload._id)\n        },\n        \n        setSelectedTask:(state,action) => {\n            state.selectedTask = action.payload\n        }\n\n    },\n    extraReducers:(builder) => {\n        builder\n            .addCase(getTasksFromServer.pending,(state) => {\n                state.isLoading = true\n            })\n            .addCase(getTasksFromServer.fulfilled,(state,action) => {\n                state.isLoading = false\n                state.error = ''\n                state.tasksList = action.payload\n            })\n            .addCase(getTasksFromServer.rejected,(state,action) => {\n                state.error = action.payload.error\n                state.isLoading = false\n                state.tasksList = []\n            })\n            .addCase(addTaskToServer.pending,(state) => {\n                state.isLoading = true\n            })\n            .addCase(addTaskToServer.fulfilled,(state,action) => {\n                state.isLoading = false\n                state.error = ''\n                state.tasksList.push(action.payload)\n            })\n            .addCase(addTaskToServer.rejected,(state,action) => {\n                state.error = action.payload.error\n                state.isLoading = false\n            })\n            .addCase(updateTaskInServer.pending,(state) => {\n                state.isLoading = true\n            })\n            .addCase(updateTaskInServer.fulfilled,(state,action) => {\n                state.isLoading = false\n                state.error = ''\n                state.tasksList = state.tasksList.map((task) => task._id === action.payload._id ? action.payload : task )\n            })\n            .addCase(updateTaskInServer.rejected,(state,action) => {\n                state.error = action.payload.error\n                state.isLoading = false\n            })\n            .addCase(deleteTaskFromServer.pending,(state) => {\n                state.isLoading = true\n            })\n            .addCase(deleteTaskFromServer.fulfilled,(state,action) => {\n                state.isLoading = false\n                state.error = ''\n            })\n            .addCase(deleteTaskFromServer.rejected,(state,action) => {\n                state.error = action.payload.error\n                state.isLoading = false\n            })\n    }\n\n})\n\nexport const {addTaskToList,removeTaskFromList,updateTaskInList,setSelectedTask} = tasksSlice.actions\n\nexport default tasksSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}